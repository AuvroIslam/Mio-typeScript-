rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow read if user is authenticated
    allow read: if request.auth != null;
    
    // Match archive files specifically
    match /archives/{conversationId}/{archiveFile=**} {
      // TEMPORARY TEST: Allow read simply if the user is authenticated
      allow read: if request.auth != null;

      // --- Original Rule (commented out for testing) ---
      // Allow reading the archive ONLY if the user is a participant in the conversation
      // allow read: if request.auth != null &&
      //              exists(/databases/$(database)/documents/conversations/$(conversationId)) &&
      //              get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);

      // Allow writing the archive if user is authenticated, size is valid, and it's JSON
      allow write: if request.auth != null
                   && request.resource.size < 5 * 1024 * 1024 // Max 5MB
                   && request.resource.contentType == 'application/json';

      // Optional: Allow participants to delete archives? Uncomment and adjust if needed.
      // allow delete: if request.auth != null &&
      //              exists(/databases/$(database)/documents/conversations/$(conversationId)) &&
      //              get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
    }
    
    // For other files like profile images
    match /{allPaths=**} {
      allow write: if request.auth != null 
        && request.resource.size < 5 * 1024 * 1024
        && request.resource.contentType.matches('image/.*');
        
      // Allow delete if user is authenticated
      allow delete: if request.auth != null;
    }
  }
}